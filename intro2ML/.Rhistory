train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(17)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 50, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
train_data
# Set seed for reproducibility
set.seed(17)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(13)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(321)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(23)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(35423523)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
oducibility
# Set seed for reproducibility
set.seed(3253)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(56)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(3)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(171)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(17)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(66)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(667)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(666)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(17)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(13)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(132)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(2)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Set seed for reproducibility
set.seed(1)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
# write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
# write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
# Create a random index for splitting
n <- nrow(bh_data)
train_index <- sample(seq_len(n), size = 100, replace = FALSE)
# Split data into 50% training and 50% test
train_data <- bh_data[train_index, ]
test_data  <- bh_data[-train_index, ]
# Save as CSV
write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
# Print confirmation
print("Train and test datasets saved as CSV.")
str(train_data)
m0 <- lm(medv ~ ., data=train_data)
pred_y_train <- predict(m0)
mean((pred_y_train - train_data$medv)^2)
pred_y <- predict(m0, newdata=test_data)
mean((pred_y - test_data$medv)^2)
mean((test_data$medv - mean(test_data$medv))^2)
summary(m0)
str(train_data)
train_data <- subset(train_data, select = -c(b))
test_data <- subset(test_data, select = -c(b))
write.csv(train_data, "california_housing_train.csv", row.names = FALSE)
write.csv(test_data, "california_housing_test.csv", row.names = FALSE)
#
str(train_data)
